{"version":3,"sources":["webpack:///engagement-videos-main-11c67b8e70dc161049a8.js","webpack:///./analytics_dashboard/static/js/engagement-videos-main.js"],"names":["webpackJsonp","768","module","exports","__webpack_require__","e","then","__WEBPACK_AMD_REQUIRE_ARRAY__","page","d3","_","DataTableView","StackedBarView","videoChart","videoTable","model","models","courseModel","graphVideoColumns","key","percent_key","title","gettext","className","type","color","tableColumns","get","concat","push","el","modelAttribute","trends","renderIfDataAvailable","columns","sorting","replaceZero","apply","catch","oe"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YCFAA,GAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,MAAT,SAAqCI,GAGjCJ,EAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,IAAMA,EAAA,IAAcA,EAAA,IAAyBA,EAAA,MAAtD,SACaK,EAAIC,EAAGC,EAAeC,GAC3B,GAuBIC,GACAC,EAxBAC,EAAQP,EAAKQ,OAAOC,YACpBC,IAEQC,IAAK,eACLC,YAAa,cACbC,MAAOC,QAAQ,kBACfC,UAAW,aACXC,KAAM,SACNC,MAAO,YAGPN,IAAK,mBACLC,YAAa,qBACbC,MAAOC,QAAQ,oBACfC,UAAW,aACXC,KAAM,SACNC,MAAO,YAGfC,IACKP,IAAK,QAASE,MAAOC,QAAQ,SAAUE,KAAM,SAAUD,UAAW,eAClEJ,IAAK,OAAQE,MAAON,EAAMY,IAAI,uBAAwBH,KAAM,WAKrEE,GAAeA,EAAaE,OAAOV,GACnCQ,EAAaG,MACTV,IAAK,cACLE,MAAOC,QAAQ,yBACfC,UAAW,aACXC,KAAM,YAGNT,EAAMY,IAAI,aACVd,EAAa,GAAID,IACbkB,GAAI,cACJf,MAAOA,EACPgB,eAAgB,iBAChBC,OAAQd,IAEZL,EAAWoB,yBAGfnB,EAAa,GAAIH,IACbmB,GAAI,yBACJf,MAAOA,EACPgB,eAAgB,iBAChBG,QAASR,EACTS,SAAU,SACVC,YAAa,MAEjBtB,EAAWmB,0BDEhBI,MAAM,KAAM9B,KCxDf+B,MAAAlC,EAAAmC,MDyDDF,MAAM,KAAM9B,KC5Df+B,MAAAlC,EAAAmC,ODgEG","file":"engagement-videos-main-11c67b8e70dc161049a8.js","sourcesContent":["webpackJsonp([15],{\n\n/***/ 768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Called for displaying a collection of video charts and tables.  Each bar represents a single video.\n */\n__webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(10)]; ((function (page) {\n    'use strict';\n\n    __webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(58), __webpack_require__(16), __webpack_require__(12), __webpack_require__(61)]; ((function (d3, _, DataTableView, StackedBarView) {\n        var model = page.models.courseModel,\n            graphVideoColumns = [{\n            key: 'users_at_end',\n            percent_key: 'end_percent',\n            title: gettext('Complete Views'),\n            className: 'text-right',\n            type: 'number',\n            color: '#58BC4B'\n        }, {\n            key: 'start_only_users',\n            percent_key: 'start_only_percent',\n            title: gettext('Incomplete Views'),\n            className: 'text-right',\n            type: 'number',\n            color: '#9B9B9B'\n        }],\n            tableColumns = [{ key: 'index', title: gettext('Order'), type: 'number', className: 'text-right' }, { key: 'name', title: model.get('contentTableHeading'), type: 'hasNull' }],\n            videoChart,\n            videoTable;\n\n        tableColumns = tableColumns.concat(graphVideoColumns);\n        tableColumns.push({\n            key: 'end_percent',\n            title: gettext('Completion Percentage'),\n            className: 'text-right',\n            type: 'percent'\n        });\n\n        if (model.get('hasData')) {\n            videoChart = new StackedBarView({\n                el: '#chart-view',\n                model: model,\n                modelAttribute: 'primaryContent',\n                trends: graphVideoColumns\n            });\n            videoChart.renderIfDataAvailable();\n        }\n\n        videoTable = new DataTableView({\n            el: '[data-role=data-table]',\n            model: model,\n            modelAttribute: 'primaryContent',\n            columns: tableColumns,\n            sorting: ['index'],\n            replaceZero: '-'\n        });\n        videoTable.renderIfDataAvailable();\n    }).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n}).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n\n/***/ })\n\n},[768]);\n\n\n// WEBPACK FOOTER //\n// engagement-videos-main-11c67b8e70dc161049a8.js","/**\n * Called for displaying a collection of video charts and tables.  Each bar represents a single video.\n */\nrequire(['load/init-page'], function(page) {\n    'use strict';\n\n    require(['d3', 'underscore', 'views/data-table-view', 'views/stacked-bar-view'],\n        function(d3, _, DataTableView, StackedBarView) {\n            var model = page.models.courseModel,\n                graphVideoColumns = [\n                    {\n                        key: 'users_at_end',\n                        percent_key: 'end_percent',\n                        title: gettext('Complete Views'),\n                        className: 'text-right',\n                        type: 'number',\n                        color: '#58BC4B'\n                    },\n                    {\n                        key: 'start_only_users',\n                        percent_key: 'start_only_percent',\n                        title: gettext('Incomplete Views'),\n                        className: 'text-right',\n                        type: 'number',\n                        color: '#9B9B9B'\n                    }\n                ],\n                tableColumns = [\n                    {key: 'index', title: gettext('Order'), type: 'number', className: 'text-right'},\n                    {key: 'name', title: model.get('contentTableHeading'), type: 'hasNull'}\n                ],\n                videoChart,\n                videoTable;\n\n            tableColumns = tableColumns.concat(graphVideoColumns);\n            tableColumns.push({\n                key: 'end_percent',\n                title: gettext('Completion Percentage'),\n                className: 'text-right',\n                type: 'percent'\n            });\n\n            if (model.get('hasData')) {\n                videoChart = new StackedBarView({\n                    el: '#chart-view',\n                    model: model,\n                    modelAttribute: 'primaryContent',\n                    trends: graphVideoColumns\n                });\n                videoChart.renderIfDataAvailable();\n            }\n\n            videoTable = new DataTableView({\n                el: '[data-role=data-table]',\n                model: model,\n                modelAttribute: 'primaryContent',\n                columns: tableColumns,\n                sorting: ['index'],\n                replaceZero: '-'\n            });\n            videoTable.renderIfDataAvailable();\n        });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./analytics_dashboard/static/js/engagement-videos-main.js"],"sourceRoot":""}