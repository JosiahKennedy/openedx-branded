{"version":3,"sources":["webpack:///performance-answer-distribution-main-5e67dda1722c5678e67a.js","webpack:///./analytics_dashboard/static/js/performance-answer-distribution-main.js"],"names":["webpackJsonp","777","module","exports","__webpack_require__","e","then","__WEBPACK_AMD_REQUIRE_ARRAY__","page","_","DataTableView","DiscreteBarView","performanceAnswerChart","performanceAnswerTable","courseModel","models","answerColumn","key","title","gettext","type","tableColumns","className","get","push","el","model","modelAttribute","dataType","truncateXTicks","trends","index","correct","color","answer","x","y","interactiveTooltipHeaderTemplate","template","renderIfDataAvailable","columns","sorting","replaceZero","apply","catch","oe"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YCDAA,GAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,MAAT,SAAqCI,GAGjCJ,EAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,IAAcA,EAAA,IAAyBA,EAAA,OAAhD,SACiBK,EAAGC,EAAeC,GACvB,GAQIC,GACAC,EATAC,EAAcN,EAAKO,OAAOD,YAE1BE,GAAgBC,IADF,eACoBC,MAAOC,QAAQ,UAAWC,KAAM,WAClEC,GACIL,GACCC,IAAK,UAAWC,MAAOC,QAAQ,WAAYC,KAAM,SACjDH,IAAK,QAASC,MAAOC,QAAQ,oBAAqBC,KAAM,SAAUE,UAAW,cAMhD,aAAlCR,EAAYS,IAAI,gBAChBP,EAAaI,KAAO,UAIpBN,EAAYS,IAAI,aAEhBF,EAAaG,MACTP,IAAK,UAAWC,MAAOC,QAAQ,WAAYC,KAAM,SAAUE,UAAW,eAI9EV,EAAyB,GAAID,IACzBc,GAAI,0BACJC,MAAOZ,EACPa,eAAgB,4BAChBC,SAAU,QACVC,gBAAgB,EAChBC,SACIZ,MAAO,SAASa,GACZ,MAAIjB,GAAYS,IAAI,6BAA6BQ,GAAOC,QAC7Cb,QAAQ,WAERA,QAAQ,cAGvBc,MAAO,SAASC,GAEZ,MAAIA,GAAOF,QACA,UAEA,aAInBG,GAAIlB,IA9CU,gBA+CdmB,GAAInB,IAAK,SAEToB,iCAAkC5B,EAAE6B,SAASnB,QAAQ,yBAEzDP,EAAuB2B,wBAEvB1B,EAAyB,GAAIH,IACzBe,GAAI,gCACJC,MAAOZ,EACPa,eAAgB,qBAChBa,QAASnB,EACToB,SAAU,UACVC,YAAa,MAEjB7B,EAAuB0B,0BDIhCI,MAAM,KAAMpC,KCpEfqC,MAAAxC,EAAAyC,MDqEDF,MAAM,KAAMpC,KCxEfqC,MAAAxC,EAAAyC,OD4EG","file":"performance-answer-distribution-main-5e67dda1722c5678e67a.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 777:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This is the first script called by the performance answer distribution page.\n */\n\n__webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(10)]; ((function (page) {\n    'use strict';\n\n    __webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(16), __webpack_require__(12), __webpack_require__(133)]; ((function (_, DataTableView, DiscreteBarView) {\n        var courseModel = page.models.courseModel,\n            answerField = 'answer_value',\n            answerColumn = { key: answerField, title: gettext('Answer'), type: 'hasNull' },\n            tableColumns = [answerColumn, { key: 'correct', title: gettext('Correct'), type: 'bool' }, { key: 'count', title: gettext('Submission Count'), type: 'number', className: 'text-right' }],\n            performanceAnswerChart,\n            performanceAnswerTable;\n\n        // answers are stored either the numeric or string fields\n        if (courseModel.get('answerType') === 'numeric') {\n            answerColumn.type = 'number';\n        }\n\n        // randomized problems have a random seeds field that differentiates rows\n        if (courseModel.get('isRandom')) {\n            // only show the variant column for randomized problems\n            tableColumns.push({\n                key: 'variant', title: gettext('Variant'), type: 'number', className: 'text-right'\n            });\n        }\n\n        performanceAnswerChart = new DiscreteBarView({\n            el: '#performance-chart-view',\n            model: courseModel,\n            modelAttribute: 'answerDistributionLimited',\n            dataType: 'count',\n            truncateXTicks: true,\n            trends: [{\n                title: function title(index) {\n                    if (courseModel.get('answerDistributionLimited')[index].correct) {\n                        return gettext('Correct');\n                    } else {\n                        return gettext('Incorrect');\n                    }\n                },\n                color: function color(answer) {\n                    // green bars represent bars with the correct answer\n                    if (answer.correct) {\n                        return '#4BB4FB';\n                    } else {\n                        return '#CA0061';\n                    }\n                }\n            }],\n            x: { key: answerField },\n            y: { key: 'count' },\n            // Translators: <%=value%> will be replaced by a learner response to a question asked in a course.\n            interactiveTooltipHeaderTemplate: _.template(gettext('Answer: <%=value%>'))\n        });\n        performanceAnswerChart.renderIfDataAvailable();\n\n        performanceAnswerTable = new DataTableView({\n            el: '[data-role=performance-table]',\n            model: courseModel,\n            modelAttribute: 'answerDistribution',\n            columns: tableColumns,\n            sorting: ['-count'],\n            replaceZero: '-'\n        });\n        performanceAnswerTable.renderIfDataAvailable();\n    }).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n}).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n\n/***/ })\n\n},[777]);\n\n\n// WEBPACK FOOTER //\n// performance-answer-distribution-main-5e67dda1722c5678e67a.js","/**\n * This is the first script called by the performance answer distribution page.\n */\n\nrequire(['load/init-page'], function(page) {\n    'use strict';\n\n    require(['underscore', 'views/data-table-view', 'views/discrete-bar-view'],\n            function(_, DataTableView, DiscreteBarView) {\n                var courseModel = page.models.courseModel,\n                    answerField = 'answer_value',\n                    answerColumn = {key: answerField, title: gettext('Answer'), type: 'hasNull'},\n                    tableColumns = [\n                        answerColumn,\n                        {key: 'correct', title: gettext('Correct'), type: 'bool'},\n                        {key: 'count', title: gettext('Submission Count'), type: 'number', className: 'text-right'}\n                    ],\n                    performanceAnswerChart,\n                    performanceAnswerTable;\n\n                // answers are stored either the numeric or string fields\n                if (courseModel.get('answerType') === 'numeric') {\n                    answerColumn.type = 'number';\n                }\n\n                // randomized problems have a random seeds field that differentiates rows\n                if (courseModel.get('isRandom')) {\n                    // only show the variant column for randomized problems\n                    tableColumns.push({\n                        key: 'variant', title: gettext('Variant'), type: 'number', className: 'text-right'\n                    });\n                }\n\n                performanceAnswerChart = new DiscreteBarView({\n                    el: '#performance-chart-view',\n                    model: courseModel,\n                    modelAttribute: 'answerDistributionLimited',\n                    dataType: 'count',\n                    truncateXTicks: true,\n                    trends: [{\n                        title: function(index) {\n                            if (courseModel.get('answerDistributionLimited')[index].correct) {\n                                return gettext('Correct');\n                            } else {\n                                return gettext('Incorrect');\n                            }\n                        },\n                        color: function(answer) {\n                            // green bars represent bars with the correct answer\n                            if (answer.correct) {\n                                return '#4BB4FB';\n                            } else {\n                                return '#CA0061';\n                            }\n                        }\n                    }],\n                    x: {key: answerField},\n                    y: {key: 'count'},\n                    // Translators: <%=value%> will be replaced by a learner response to a question asked in a course.\n                    interactiveTooltipHeaderTemplate: _.template(gettext('Answer: <%=value%>'))\n                });\n                performanceAnswerChart.renderIfDataAvailable();\n\n                performanceAnswerTable = new DataTableView({\n                    el: '[data-role=performance-table]',\n                    model: courseModel,\n                    modelAttribute: 'answerDistribution',\n                    columns: tableColumns,\n                    sorting: ['-count'],\n                    replaceZero: '-'\n                });\n                performanceAnswerTable.renderIfDataAvailable();\n            });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./analytics_dashboard/static/js/performance-answer-distribution-main.js"],"sourceRoot":""}