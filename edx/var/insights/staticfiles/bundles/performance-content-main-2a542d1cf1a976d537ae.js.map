{"version":3,"sources":["webpack:///performance-content-main-2a542d1cf1a976d537ae.js","webpack:///./analytics_dashboard/static/js/performance-content-main.js"],"names":["webpackJsonp","775","module","exports","__webpack_require__","e","then","__WEBPACK_AMD_REQUIRE_ARRAY__","page","d3","_","DataTableView","StackedBarView","performanceChart","performanceTable","model","models","courseModel","graphSubmissionColumns","key","percent_key","title","gettext","className","type","fractionDigits","color","tableColumns","get","concat","push","el","modelAttribute","dataType","trends","renderIfDataAvailable","columns","sorting","replaceZero","apply","catch","oe"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YCLAA,GAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,MAAT,SAAqCI,GAGjCJ,EAAAC,EAAA,GAAAC,KAAA,WAAQ,GAAAC,IAACH,EAAA,IAAMA,EAAA,IAAcA,EAAA,IAAyBA,EAAA,MAAtD,SACaK,EAAIC,EAAGC,EAAeC,GAC3B,GA0BIC,GACAC,EA3BAC,EAAQP,EAAKQ,OAAOC,YACpBC,IAEQC,IAAK,8BACLC,YAAa,kBACbC,MAAOC,QAAQ,mBACfC,UAAW,aACXC,KAAM,SACNC,eAAgB,EAChBC,MAAO,YAGPP,IAAK,gCACLC,YAAa,oBACbC,MAAOC,QAAQ,qBACfC,UAAW,aACXC,KAAM,SACNC,eAAgB,EAChBC,MAAO,YAGfC,IACKR,IAAK,QAASE,MAAOC,QAAQ,SAAUE,KAAM,SAAUD,UAAW,eAClEJ,IAAK,OAAQE,MAAON,EAAMa,IAAI,uBAAwBJ,KAAM,YAC5DL,IAAK,cAAeE,MAAOC,QAAQ,YAAaE,KAAM,SAAUD,UAAW,cAKpFI,GAAeA,EAAaE,OAAOX,GAEnCS,EAAaG,MACTX,IAAK,sBACLE,MAAOC,QAAQ,mCACfC,UAAW,aACXC,KAAM,SACNC,eAAgB,EAChBC,MAAO,YAGXC,EAAaG,MACTX,IAAK,kBACLE,MAAOC,QAAQ,sBACfC,UAAW,aACXC,KAAM,YAGNT,EAAMa,IAAI,aACVf,EAAmB,GAAID,IACnBmB,GAAI,cACJhB,MAAOA,EACPiB,eAAgB,iBAChBC,SAAU,UACVC,OAAQhB,IAEZL,EAAiBsB,yBAGrBrB,EAAmB,GAAIH,IACnBoB,GAAI,yBACJhB,MAAOA,EACPiB,eAAgB,iBAChBI,QAAST,EACTU,SAAU,SACVC,YAAa,MAEjBxB,EAAiBqB,0BDCtBI,MAAM,KAAMhC,KCrEfiC,MAAApC,EAAAqC,MDsEDF,MAAM,KAAMhC,KCzEfiC,MAAApC,EAAAqC,OD6EG","file":"performance-content-main-2a542d1cf1a976d537ae.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 775:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(10)]; ((function (page) {\n    'use strict';\n\n    __webpack_require__.e/* require */(0/* aggressive-merge */).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(58), __webpack_require__(16), __webpack_require__(12), __webpack_require__(61)]; ((function (d3, _, DataTableView, StackedBarView) {\n        var model = page.models.courseModel,\n            graphSubmissionColumns = [{\n            key: 'average_correct_submissions',\n            percent_key: 'correct_percent',\n            title: gettext('Average Correct'),\n            className: 'text-right',\n            type: 'number',\n            fractionDigits: 1,\n            color: '#4BB4FB'\n        }, {\n            key: 'average_incorrect_submissions',\n            percent_key: 'incorrect_percent',\n            title: gettext('Average Incorrect'),\n            className: 'text-right',\n            type: 'number',\n            fractionDigits: 1,\n            color: '#CA0061'\n        }],\n            tableColumns = [{ key: 'index', title: gettext('Order'), type: 'number', className: 'text-right' }, { key: 'name', title: model.get('contentTableHeading'), type: 'hasNull' }, { key: 'num_modules', title: gettext('Problems'), type: 'number', className: 'text-right' }],\n            performanceChart,\n            performanceTable;\n\n        tableColumns = tableColumns.concat(graphSubmissionColumns);\n\n        tableColumns.push({\n            key: 'average_submissions',\n            title: gettext('Average Submissions Per Problem'),\n            className: 'text-right',\n            type: 'number',\n            fractionDigits: 1,\n            color: '#4BB4FB'\n        });\n\n        tableColumns.push({\n            key: 'correct_percent',\n            title: gettext('Percentage Correct'),\n            className: 'text-right',\n            type: 'percent'\n        });\n\n        if (model.get('hasData')) {\n            performanceChart = new StackedBarView({\n                el: '#chart-view',\n                model: model,\n                modelAttribute: 'primaryContent',\n                dataType: 'decimal',\n                trends: graphSubmissionColumns\n            });\n            performanceChart.renderIfDataAvailable();\n        }\n\n        performanceTable = new DataTableView({\n            el: '[data-role=data-table]',\n            model: model,\n            modelAttribute: 'primaryContent',\n            columns: tableColumns,\n            sorting: ['index'],\n            replaceZero: '-'\n        });\n        performanceTable.renderIfDataAvailable();\n    }).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n}).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n\n/***/ })\n\n},[775]);\n\n\n// WEBPACK FOOTER //\n// performance-content-main-2a542d1cf1a976d537ae.js","require(['load/init-page'], function(page) {\n    'use strict';\n\n    require(['d3', 'underscore', 'views/data-table-view', 'views/stacked-bar-view'],\n        function(d3, _, DataTableView, StackedBarView) {\n            var model = page.models.courseModel,\n                graphSubmissionColumns = [\n                    {\n                        key: 'average_correct_submissions',\n                        percent_key: 'correct_percent',\n                        title: gettext('Average Correct'),\n                        className: 'text-right',\n                        type: 'number',\n                        fractionDigits: 1,\n                        color: '#4BB4FB'\n                    },\n                    {\n                        key: 'average_incorrect_submissions',\n                        percent_key: 'incorrect_percent',\n                        title: gettext('Average Incorrect'),\n                        className: 'text-right',\n                        type: 'number',\n                        fractionDigits: 1,\n                        color: '#CA0061'\n                    }\n                ],\n                tableColumns = [\n                    {key: 'index', title: gettext('Order'), type: 'number', className: 'text-right'},\n                    {key: 'name', title: model.get('contentTableHeading'), type: 'hasNull'},\n                    {key: 'num_modules', title: gettext('Problems'), type: 'number', className: 'text-right'}\n                ],\n                performanceChart,\n                performanceTable;\n\n            tableColumns = tableColumns.concat(graphSubmissionColumns);\n\n            tableColumns.push({\n                key: 'average_submissions',\n                title: gettext('Average Submissions Per Problem'),\n                className: 'text-right',\n                type: 'number',\n                fractionDigits: 1,\n                color: '#4BB4FB'\n            });\n\n            tableColumns.push({\n                key: 'correct_percent',\n                title: gettext('Percentage Correct'),\n                className: 'text-right',\n                type: 'percent'\n            });\n\n            if (model.get('hasData')) {\n                performanceChart = new StackedBarView({\n                    el: '#chart-view',\n                    model: model,\n                    modelAttribute: 'primaryContent',\n                    dataType: 'decimal',\n                    trends: graphSubmissionColumns\n                });\n                performanceChart.renderIfDataAvailable();\n            }\n\n            performanceTable = new DataTableView({\n                el: '[data-role=data-table]',\n                model: model,\n                modelAttribute: 'primaryContent',\n                columns: tableColumns,\n                sorting: ['index'],\n                replaceZero: '-'\n            });\n            performanceTable.renderIfDataAvailable();\n        });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./analytics_dashboard/static/js/performance-content-main.js"],"sourceRoot":""}